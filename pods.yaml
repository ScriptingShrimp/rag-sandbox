# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-5.3.1
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.podman.annotations.kube.health.check/postgrespod-pgadmincontainer: "true"
    io.podman.annotations.kube.health.check/postgrespod-pgvectorcontainer: "true"
    io.podman.annotations.userns: host
  creationTimestamp: "2025-05-12T23:16:49Z"
  labels:
    app: postgrespod
  name: postgrespod
spec:
  containers:
  - env:
    - name: PGADMIN_DEFAULT_EMAIL
      value: admin@example.com
    - name: PGADMIN_DEFAULT_PASSWORD
      value: admin123
    image: docker.io/dpage/pgadmin4:latest
    name: postgrespod-pgadmincontainer
    ports:
    - containerPort: 5432
      hostPort: 5432
    - containerPort: 80
      hostPort: 8888
    securityContext: {}
    volumeMounts:
    - mountPath: /var/lib/pgadmin
      name: pgadmin-data-pvc
  - args:
    - postgres
    env:
    - name: POSTGRES_PASSWORD
      value: secret
    - name: POSTGRES_DB
      value: mydatabase
    - name: POSTGRES_USER
      value: admin
    image: docker.io/pgvector/pgvector:pg17
    name: postgrespod-pgvectorcontainer
    volumeMounts:
    - mountPath: /var/lib/postgresql/data
      name: postgres-data-pvc
  - env:
    - name: NO_PROXY
      value: local,169.254/16
    - name: TERM
      value: xterm
    image: ghcr.io/nlmatics/nlm-ingestor:latest
    name: nlm-ingestor
    ports:
    - containerPort: 5001
      hostPort: 5001
    tty: true
  restartPolicy: Always
  volumes:
  - name: pgadmin-data-pvc
    persistentVolumeClaim:
      claimName: pgadmin-data
  - name: postgres-data-pvc
    persistentVolumeClaim:
      claimName: postgres-data
